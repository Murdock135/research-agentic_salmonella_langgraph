Download a snapshot of the repo
huggingface_hub.snapshot_download
<
source
>
( repo_id: strrepo_type: typing.Optional[str] = Nonerevision: typing.Optional[str] = Nonecache_dir: typing.Union[str, pathlib.Path, NoneType] = Nonelocal_dir: typing.Union[str, pathlib.Path, NoneType] = Nonelibrary_name: typing.Optional[str] = Nonelibrary_version: typing.Optional[str] = Noneuser_agent: typing.Union[typing.Dict, str, NoneType] = Noneproxies: typing.Optional[typing.Dict] = Noneetag_timeout: float = 10force_download: bool = Falsetoken: typing.Union[str, bool, NoneType] = Nonelocal_files_only: bool = Falseallow_patterns: typing.Union[typing.List[str], str, NoneType] = Noneignore_patterns: typing.Union[typing.List[str], str, NoneType] = Nonemax_workers: int = 8tqdm_class: typing.Optional[tqdm.asyncio.tqdm_asyncio] = Noneheaders: typing.Optional[typing.Dict[str, str]] = Noneendpoint: typing.Optional[str] = Nonelocal_dir_use_symlinks: typing.Union[bool, typing.Literal['auto']] = 'auto'resume_download: typing.Optional[bool] = None ) → str

Parameters

repo_id (str) — A user or an organization name and a repo name separated by a /.
repo_type (str, optional) — Set to "dataset" or "space" if downloading from a dataset or space, None or "model" if downloading from a model. Default is None.
revision (str, optional) — An optional Git revision id which can be a branch name, a tag, or a commit hash.
cache_dir (str, Path, optional) — Path to the folder where cached files are stored.
local_dir (str or Path, optional) — If provided, the downloaded files will be placed under this directory.
library_name (str, optional) — The name of the library to which the object corresponds.
library_version (str, optional) — The version of the library.
user_agent (str, dict, optional) — The user-agent info in the form of a dictionary or a string.
proxies (dict, optional) — Dictionary mapping protocol to the URL of the proxy passed to requests.request.
etag_timeout (float, optional, defaults to 10) — When fetching ETag, how many seconds to wait for the server to send data before giving up which is passed to requests.request.
force_download (bool, optional, defaults to False) — Whether the file should be downloaded even if it already exists in the local cache.
token (str, bool, optional) — A token to be used for the download.
If True, the token is read from the HuggingFace config folder.
If a string, it’s used as the authentication token.
headers (dict, optional) — Additional headers to include in the request. Those headers take precedence over the others.
local_files_only (bool, optional, defaults to False) — If True, avoid downloading the file and return the path to the local cached file if it exists.
allow_patterns (List[str] or str, optional) — If provided, only files matching at least one pattern are downloaded.
ignore_patterns (List[str] or str, optional) — If provided, files matching any of the patterns are not downloaded.
max_workers (int, optional) — Number of concurrent threads to download files (1 thread = 1 file download). Defaults to 8.
tqdm_class (tqdm, optional) — If provided, overwrites the default behavior for the progress bar. Passed argument must inherit from tqdm.auto.tqdm or at least mimic its behavior. Note that the tqdm_class is not passed to each individual download. Defaults to the custom HF progress bar that can be disabled by setting HF_HUB_DISABLE_PROGRESS_BARS environment variable.
Returns

str

folder path of the repo snapshot.


Raises

RepositoryNotFoundError or RevisionNotFoundError or EnvironmentError or OSError or ValueError

RepositoryNotFoundError — If the repository to download from cannot be found. This may be because it doesn’t exist, or because it is set to private and you do not have access.
RevisionNotFoundError — If the revision to download from cannot be found.
EnvironmentError — If token=True and the token cannot be found.
OSError — if ETag cannot be determined.
ValueError — if some parameter value is invalid.

Download repo files.

Download a whole snapshot of a repo’s files at the specified revision. This is useful when you want all files from a repo, because you don’t know which ones you will need a priori. All files are nested inside a folder in order to keep their actual filename relative to that folder. You can also filter which files to download using allow_patterns and ignore_patterns.

If local_dir is provided, the file structure from the repo will be replicated in this location. When using this option, the cache_dir will not be used and a .cache/huggingface/ folder will be created at the root of local_dir to store some metadata related to the downloaded files. While this mechanism is not as robust as the main cache-system, it’s optimized for regularly pulling the latest version of a repository.

An alternative would be to clone the repo but this requires git and git-lfs to be installed and properly configured. It is also not possible to filter which files to download when cloning a repository using git.